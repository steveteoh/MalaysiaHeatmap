var _0x53860a = _0x5a39; (function (_0x46a324, _0x2137fc) { var _0x14d518 = _0x5a39, _0xbf7c07 = _0x46a324(); while (!![]) { try { var _0x330112 = parseInt(_0x14d518(0x1ad)) / 0x1 + -parseInt(_0x14d518(0x1a9)) / 0x2 * (-parseInt(_0x14d518(0x197)) / 0x3) + -parseInt(_0x14d518(0x1ae)) / 0x4 + parseInt(_0x14d518(0x1dc)) / 0x5 + -parseInt(_0x14d518(0x1e6)) / 0x6 * (-parseInt(_0x14d518(0x1d7)) / 0x7) + -parseInt(_0x14d518(0x19f)) / 0x8 + -parseInt(_0x14d518(0x1e3)) / 0x9 * (-parseInt(_0x14d518(0x1eb)) / 0xa); if (_0x330112 === _0x2137fc) break; else _0xbf7c07['push'](_0xbf7c07['shift']()); } catch (_0x5cf583) { _0xbf7c07['push'](_0xbf7c07['shift']()); } } }(_0x5816, 0x891be)); var map = null, geocoder = null, myfeature = {}, mygeometry = {}, locations = [], gridWidth = 0x1f4, bounds = null, markers = [], places = [], lt1 = 0x0, ln1 = 0x0, pos = {}, stateRequestURL = 'https://steveteoh.github.io/Hex/Selangor/selangor.json', districtRequestURL = _0x53860a(0x1e9), inputURL = _0x53860a(0x1b4), mapID = _0x53860a(0x1b5); function _0x5816() { var _0x15f9ee = ['rgb(255,\x2067,\x2067)', 'toString', 'rgb(77,\x2077,\x2077)', 'hide-markers', '<br>Weekly\x20Active\x20cases:\x20', 'click', 'get', 'totalrecovered', 'placename', 'getElementById', 'Map', 'Error:\x20Your\x20browser\x20doesn\x27t\x20support\x20geolocation.', 'show-markers', 'addEventListener', 'red', 'purple', 'longitude', '<br>Coordinates:\x20(', 'rgb(0,\x20255,\x200)', 'ROADMAP', 'name', '<br>Weekly\x20Deaths:\x20', 'Geocoder', 'weeklydeaths', '\x20\x20\x20\x20\x20\x20\x20|\x20Total\x20Active\x20cases:\x20', 'latitude', '588JHwPDQ', 'length', 'lat', 'load', 'green', '2514540oHipaS', 'weeklyactive', 'map_canvas', 'Data', 'weeklyrecovered', 'LatLng', 'label', '2421sTADKG', 'open', '2021-08-15T12:11:01.587Z\x20', '9042LbDOFN', 'getGeometry', 'push', 'https://steveteoh.github.io/Hex/Selangor/daerah/subang_jaya.json', 'reduce', '920BIqNoI', 'MapTypeId', '\x20\x20\x20\x20\x20\x20\x20|\x20Total\x20Deaths:\x20', '.png', 'LatLngBounds', 'maps', '<br>Weekly\x20Recovered:', '<br>place\x20name:\x20', 'fitBounds', 'indexOf', '<br>Weight:', 'computeOffset', '246fOqTeC', 'sqrt', 'setPosition', '<br>Timestamp:\x20', 'data', 'yellow', 'coords', 'totalactive', '5133712jMbyZN', 'Polygon', 'rgb(102,\x200,\x20102)', 'rgb(255,\x20255,\x20102)', 'Marker', 'setStyle', 'addListener', 'slice', 'Your\x20Location', 'getCurrentPosition', '25794Jelnps', 'Size', 'map', 'https://maps.google.com/mapfiles/ms/icons/', '223200IgtLVQ', '2926744fQlUno', 'extend', 'forEach', 'getCenter', 'rgb(255,\x20153,\x200)', 'InfoWindow', 'https://steveteoh.github.io/Hex/Selangor/daerah/subang_jaya.csv', 'Subang\x20Jaya', 'geolocation', 'split', 'setContent', '\x20\x20\x20\x20\x20\x20\x20|\x20Total\x20Recovered:', 'loadGeoJson', 'getFeatureById', 'setCenter']; _0x5816 = function () { return _0x15f9ee; }; return _0x5816(); } const PLACE_BOUNDS = { 'name': _0x53860a(0x1b5), 'north': 3.085027, 'south': 2.976325, 'west': 101.549597, 'east': 101.730601 }, grey = _0x53860a(0x1bf), green = _0x53860a(0x1cf), yellow = _0x53860a(0x1a2), orange = _0x53860a(0x1b2), red = _0x53860a(0x1bd), medred = 'rgb(204,\x200,\x200)', purple = _0x53860a(0x1a1), greenlevel = 0xa, yellowlevel = 0x32, orangelevel = 0x63, redlevel = 0xc7, medredlevel = 0x12b, SQRT3 = 1.7320508075688772; $(window)[_0x53860a(0x1da)](function () { var _0x264fd5 = _0x53860a; bounds = new google[(_0x264fd5(0x1f0))][(_0x264fd5(0x1ef))](), map = new google[(_0x264fd5(0x1f0))][(_0x264fd5(0x1c7))](document['getElementById'](_0x264fd5(0x1de)), { 'center': { 'lat': 0x0, 'lng': 0x0 }, 'scaleControl': !![], 'zoom': 0xc, 'mapTypeId': google['maps'][_0x264fd5(0x1ec)][_0x264fd5(0x1d0)] }), geocoder = new google[(_0x264fd5(0x1f0))][(_0x264fd5(0x1d3))](); var _0x9c1679 = new google[(_0x264fd5(0x1f0))][(_0x264fd5(0x1b3))]({ 'map': map }); navigator[_0x264fd5(0x1b6)] ? navigator[_0x264fd5(0x1b6)][_0x264fd5(0x1a8)](_0x3428b8 => { var _0x1c1b33 = _0x264fd5; pos = { 'lat': _0x3428b8[_0x1c1b33(0x19d)][_0x1c1b33(0x1d6)], 'lng': _0x3428b8[_0x1c1b33(0x19d)][_0x1c1b33(0x1cd)] }, _0x9c1679[_0x1c1b33(0x199)](pos), _0x9c1679[_0x1c1b33(0x1b8)](_0x1c1b33(0x1a7)), _0x9c1679[_0x1c1b33(0x1e4)](map), map[_0x1c1b33(0x1bc)](pos); }, () => { handleLocationError(!![], _0x9c1679, map['getCenter']()); }) : handleLocationError(![], _0x9c1679, map[_0x264fd5(0x1b1)]()); const _0x549602 = getFileAjax(inputURL), _0x4a19cc = csvToArray(_0x549602, ','); var _0x267636 = new google[(_0x264fd5(0x1f0))][(_0x264fd5(0x1df))](); _0x267636[_0x264fd5(0x1ba)](districtRequestURL, { 'idPropertyName': _0x264fd5(0x1d1) }, function (_0x49e628) { var _0x5f112f = _0x264fd5; myfeature = _0x267636[_0x5f112f(0x1bb)](mapID), _0x267636[_0x5f112f(0x1b0)](_0x516b05 => { var _0x548e8b = _0x5f112f; mygeometry = _0x516b05[_0x548e8b(0x1e7)](), _0x4a19cc[_0x548e8b(0x1b0)](function (_0xd8e06a, _0x53bb31) { var _0x20d5f1 = _0x548e8b; lt1 = parseFloat(_0x4a19cc[_0x53bb31][_0x20d5f1(0x1d9)]), ln1 = parseFloat(_0x4a19cc[_0x53bb31]['lon']), pos = { 'lat': lt1, 'lng': ln1 }; var _0x2d5053 = _0x4a19cc[_0x53bb31][_0x20d5f1(0x1c5)], _0x5c1d6b = _0x4a19cc[_0x53bb31][_0x20d5f1(0x1e2)], _0x5d8f63 = parseInt(_0x4a19cc[_0x53bb31][_0x20d5f1(0x1dd)]), _0x50db8d = parseInt(_0x4a19cc[_0x53bb31][_0x20d5f1(0x19e)]), _0x471a40 = parseInt(_0x4a19cc[_0x53bb31][_0x20d5f1(0x1e0)]), _0x5cfaa7 = parseInt(_0x4a19cc[_0x53bb31][_0x20d5f1(0x1c4)]), _0x240fe6 = parseInt(_0x4a19cc[_0x53bb31][_0x20d5f1(0x1d4)]), _0x457d3e = parseInt(_0x4a19cc[_0x53bb31]['totaldeaths']); places[_0x20d5f1(0x1e8)]([lt1, ln1, _0x5c1d6b, _0x2d5053, _0x5d8f63, _0x50db8d, _0x471a40, _0x5cfaa7, _0x240fe6, _0x457d3e, _0x50db8d / _0x5cfaa7, _0x20d5f1(0x1e5)]); }); }), places[_0x5f112f(0x1b0)](function (_0x514892, _0x320ef2) { var _0x581a25 = _0x5f112f; latlng = new google[(_0x581a25(0x1f0))][(_0x581a25(0x1e1))]({ 'lat': _0x514892[0x0], 'lng': _0x514892[0x1] }); let _0x467095 = _0x581a25(0x1ac), _0x195c60 = _0x514892[0x4] > medredlevel ? _0x581a25(0x1cc) : _0x514892[0x4] > orangelevel ? _0x581a25(0x1cb) : _0x514892[0x4] > yellowlevel ? 'orange' : _0x514892[0x4] > greenlevel ? _0x581a25(0x19c) : _0x581a25(0x1db); _0x467095 += _0x195c60 + _0x581a25(0x1ee); const _0x84cfd8 = new google[(_0x581a25(0x1f0))][(_0x581a25(0x1a3))]({ 'position': latlng, 'map': map, 'label': _0x514892[0x4][_0x581a25(0x1be)](), 'title': _0x514892[0x3], 'icon': { 'url': _0x467095, 'scaledSize': new google[(_0x581a25(0x1f0))][(_0x581a25(0x1aa))](0x64, 0x4b) } }); attachMessage(_0x84cfd8, _0x514892[0x2] + _0x581a25(0x1f2) + _0x514892[0x3] + _0x581a25(0x1ce) + _0x514892[0x0] + ',' + _0x514892[0x1] + ')' + _0x581a25(0x1c1) + _0x514892[0x4] + _0x581a25(0x1d5) + _0x514892[0x5] + _0x581a25(0x1d2) + _0x514892[0x6] + _0x581a25(0x1ed) + _0x514892[0x7] + _0x581a25(0x1f1) + _0x514892[0x8] + _0x581a25(0x1b9) + _0x514892[0x9] + _0x581a25(0x195) + _0x514892[0xa] + _0x581a25(0x19a) + _0x514892[0xb]), markers[_0x581a25(0x1e8)](_0x84cfd8), bounds[_0x581a25(0x1af)](latlng); }), map[_0x5f112f(0x193)](bounds), document[_0x5f112f(0x1c6)](_0x5f112f(0x1c9))[_0x5f112f(0x1ca)](_0x5f112f(0x1c2), showMarkers), document[_0x5f112f(0x1c6)](_0x5f112f(0x1c0))[_0x5f112f(0x1ca)](_0x5f112f(0x1c2), hideMarkers), locations = makeBins(places), locations[_0x5f112f(0x1b0)](function (_0x315620, _0x294048) { drawVerticalHexagon(map, _0x315620, gridWidth); }); }), _0x267636['setStyle']({ 'fillColor': grey, 'fillOpacity': 0.1, 'strokeWeight': 0x1 }), map[_0x264fd5(0x19b)][_0x264fd5(0x1ba)](stateRequestURL), map[_0x264fd5(0x19b)][_0x264fd5(0x1a4)]({ 'fillColor': grey, 'fillOpacity': 0.1, 'strokeWeight': 0x1 }), hideMarkers(); }); function getFileAjax(_0x3af5ec) { var _0x56f73a = ''; return $['ajax']({ 'url': _0x3af5ec, 'async': ![], 'success': function (_0x1a067c) { _0x56f73a = _0x1a067c; } }), _0x56f73a; } function csvToArray(_0x528bfc, _0x34efc0 = ',') { var _0x17b872 = _0x53860a; const _0x5910a5 = _0x528bfc[_0x17b872(0x1a6)](0x0, _0x528bfc[_0x17b872(0x194)]('\x0a'))[_0x17b872(0x1b7)](_0x34efc0), _0x3f3fd6 = _0x528bfc[_0x17b872(0x1a6)](_0x528bfc[_0x17b872(0x194)]('\x0a') + 0x1)[_0x17b872(0x1b7)]('\x0a'); var _0x140c6c = _0x3f3fd6[_0x17b872(0x1ab)](function (_0x20bf86) { var _0x233e50 = _0x17b872; const _0x19eb81 = _0x20bf86[_0x233e50(0x1b7)](_0x34efc0), _0x31faf8 = _0x5910a5[_0x233e50(0x1ea)](function (_0x364c74, _0x4968a5, _0x4aac6b) { return _0x364c74[_0x4968a5] = _0x19eb81[_0x4aac6b], _0x364c74; }, {}); return _0x31faf8; }); return _0x140c6c; } function handleLocationError(_0x4c725e, _0x4ed0ac, _0x2a7547) { var _0x5c9ddc = _0x53860a; _0x4ed0ac[_0x5c9ddc(0x199)](_0x2a7547), _0x4ed0ac[_0x5c9ddc(0x1b8)](_0x4c725e ? 'Error:\x20The\x20Geolocation\x20service\x20failed.' : _0x5c9ddc(0x1c8)), _0x4ed0ac[_0x5c9ddc(0x1e4)](map); } function attachMessage(_0x56fbed, _0x5c031e) { var _0x3f7e49 = _0x53860a; const _0x233a18 = new google[(_0x3f7e49(0x1f0))][(_0x3f7e49(0x1b3))]({ 'content': _0x5c031e }); _0x56fbed[_0x3f7e49(0x1a5)]('click', () => { var _0x2a5bf5 = _0x3f7e49; _0x233a18[_0x2a5bf5(0x1e4)](_0x56fbed[_0x2a5bf5(0x1c3)](_0x2a5bf5(0x1de)), _0x56fbed); }); } function setMapOnAll(_0x126353) { var _0x392a80 = _0x53860a; for (let _0x32a2f3 = 0x0; _0x32a2f3 < markers[_0x392a80(0x1d8)]; _0x32a2f3++) { markers[_0x32a2f3]['setMap'](_0x126353); }; } function hideMarkers() { setMapOnAll(null); } function showMarkers() { setMapOnAll(map); } function drawVerticalHexagon(_0x32b09b, _0x2c5cd3, _0x28ee5b) { var _0x18e301 = _0x53860a, _0x5936fd = _0x2c5cd3[0x1] > medredlevel ? purple : _0x2c5cd3[0x1] > redlevel ? medred : _0x2c5cd3[0x1] > orangelevel ? red : _0x2c5cd3[0x1] > yellowlevel ? orange : _0x2c5cd3[0x1] > greenlevel ? yellow : green, _0x1e23a8 = []; for (var _0x3df192 = 0x1e; _0x3df192 < 0x168; _0x3df192 += 0x3c) { _0x1e23a8[_0x18e301(0x1e8)](google[_0x18e301(0x1f0)]['geometry']['spherical'][_0x18e301(0x196)](_0x2c5cd3[0x0], _0x28ee5b, _0x3df192)); } var _0x1a7093 = new google['maps'][(_0x18e301(0x1a0))]({ 'paths': _0x1e23a8, 'position': _0x2c5cd3, 'strokeColor': _0x5936fd, 'strokeOpacity': 0.8, 'strokeWeight': 0x2, 'fillColor': _0x5936fd, 'fillOpacity': 0.3, 'geodesic': !![] }); _0x1a7093['setMap'](_0x32b09b); } function distance(_0x1ef453, _0x2fac70, _0x48d20c, _0x1a4045) { var _0x470ecb = _0x53860a; result = Math[_0x470ecb(0x198)]((_0x1ef453 - _0x48d20c) * (_0x1ef453 - _0x48d20c) + (_0x2fac70 - _0x1a4045) * (_0x2fac70 - _0x1a4045)); return; } function nearestCenterPoint(_0x3ea2e6, _0x486682) { return div = _0x3ea2e6 / (_0x486682 / 0x2), mod = _0x3ea2e6 % (_0x486682 / 0x2), div % 0x2 == 0x1 ? increment = 0x1 : increment = 0x0, rounded = _0x486682 / 0x2 * (div + increment), div % 0x2 === 0x0 ? increment = 0x1 : increment = 0x0, rounded_scaled = _0x486682 / 0x2 * (div + increment), result = [rounded, rounded_scaled], result; } function _0x5a39(_0xbbc5fd, _0x30f380) { var _0x58160e = _0x5816(); return _0x5a39 = function (_0x5a39af, _0x12ef22) { _0x5a39af = _0x5a39af - 0x193; var _0x5193ee = _0x58160e[_0x5a39af]; return _0x5193ee; }, _0x5a39(_0xbbc5fd, _0x30f380); } function makeBins(_0x3862db) { var _0x533a68 = _0x53860a; return bins = [], _0x3862db[_0x533a68(0x1b0)](function (_0x41151a, _0x241245) { var _0x11d80e = _0x533a68; x = _0x41151a[0x0], y = _0x41151a[0x1], cases = _0x41151a[0x4], px_nearest = nearestCenterPoint(x, gridWidth), py_nearest = nearestCenterPoint(y, gridWidth * SQRT3), z1 = distance(x, y, px_nearest[0x0], py_nearest[0x0]), z2 = distance(x, y, px_nearest[0x1], py_nearest[0x1]), z1 > z2 ? bin = new google['maps'][(_0x11d80e(0x1e1))]({ 'lat': px_nearest[0x0], 'lng': py_nearest[0x0] }) : bin = new google['maps']['LatLng']({ 'lat': px_nearest[0x1], 'lng': py_nearest[0x1] }), bins[_0x11d80e(0x1e8)]([bin, cases]); }), bins; }